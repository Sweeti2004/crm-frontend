{"ast":null,"code":"import { fetchTicketLoading, fetchTicketSuccess, fetchTicketFail, searchTickets, fetchSingleTicketLoading, fetchSingleTicketSuccess, fetchSingleTicketFail } from \"./ticketsSlice\";\nimport { getAllTickets, getSingleTicket } from '../../api/ticketApi';\nexport const fetchAllTickets = () => async dispatch => {\n  dispatch(fetchTicketLoading());\n  try {\n    // const result = await getAllTickets();\n    // result.data.result.length &&\n    //   dispatch(fetchTicketSuccess(result.data.result));\n    const result = await getAllTickets();\n    console.log(result);\n    dispatch(fetchTicketSuccess(result.data.result));\n  } catch (error) {\n    dispatch(fetchTicketFail(error.message));\n  }\n};\nexport const filterSerachTicket = str => dispatch => {\n  dispatch(searchTickets(str));\n};\n\n//Actions for single ticket only\nexport const fetchSingleTicket = _id => async dispatch => {\n  // dispatch(fetchSingleTicketLoading());\n  // try {\n  const result = await getSingleTicket(_id);\n  //   dispatch(\n  //     fetchSingleTicketSuccess(\n  //       result.data.result.length && result.data.result[0]\n  //     )\n  //   );\n  // } catch (error) {\n  //   dispatch(fetchSingleTicketFail(error.message));\n  // }\n};","map":{"version":3,"names":["fetchTicketLoading","fetchTicketSuccess","fetchTicketFail","searchTickets","fetchSingleTicketLoading","fetchSingleTicketSuccess","fetchSingleTicketFail","getAllTickets","getSingleTicket","fetchAllTickets","dispatch","result","console","log","data","error","message","filterSerachTicket","str","fetchSingleTicket","_id"],"sources":["C:/Users/hp/OneDrive/Documents/Desktop/CRM/crm-frontend/frontend/src/page/ticket-list/ticketsAction.js"],"sourcesContent":["\r\nimport {fetchTicketLoading,fetchTicketSuccess,fetchTicketFail,searchTickets, fetchSingleTicketLoading,\r\n  fetchSingleTicketSuccess,\r\n  fetchSingleTicketFail} from \"./ticketsSlice\"\r\nimport {getAllTickets,getSingleTicket} from '../../api/ticketApi'\r\nexport const fetchAllTickets = () => async (dispatch) => {\r\n  dispatch(fetchTicketLoading());\r\n  try {\r\n    // const result = await getAllTickets();\r\n    // result.data.result.length &&\r\n    //   dispatch(fetchTicketSuccess(result.data.result));\r\n    const result= await getAllTickets()\r\n    console.log(result)\r\n    dispatch(fetchTicketSuccess(result.data.result));\r\n  } catch (error) {\r\n    dispatch(fetchTicketFail(error.message));\r\n  }\r\n};\r\n\r\nexport const filterSerachTicket = (str) => (dispatch) => {\r\n  dispatch(searchTickets(str));\r\n};\r\n\r\n//Actions for single ticket only\r\nexport const fetchSingleTicket = (_id) => async (dispatch) => {\r\n  // dispatch(fetchSingleTicketLoading());\r\n  // try {\r\n     const result = await getSingleTicket(_id);\r\n  //   dispatch(\r\n  //     fetchSingleTicketSuccess(\r\n  //       result.data.result.length && result.data.result[0]\r\n  //     )\r\n  //   );\r\n  // } catch (error) {\r\n  //   dispatch(fetchSingleTicketFail(error.message));\r\n  // }\r\n};\r\n\r\n"],"mappings":"AACA,SAAQA,kBAAkB,EAACC,kBAAkB,EAACC,eAAe,EAACC,aAAa,EAAEC,wBAAwB,EACnGC,wBAAwB,EACxBC,qBAAqB,QAAO,gBAAgB;AAC9C,SAAQC,aAAa,EAACC,eAAe,QAAO,qBAAqB;AACjE,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACvDA,QAAQ,CAACV,kBAAkB,CAAC,CAAC,CAAC;EAC9B,IAAI;IACF;IACA;IACA;IACA,MAAMW,MAAM,GAAE,MAAMJ,aAAa,CAAC,CAAC;IACnCK,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnBD,QAAQ,CAACT,kBAAkB,CAACU,MAAM,CAACG,IAAI,CAACH,MAAM,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdL,QAAQ,CAACR,eAAe,CAACa,KAAK,CAACC,OAAO,CAAC,CAAC;EAC1C;AACF,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAIC,GAAG,IAAMR,QAAQ,IAAK;EACvDA,QAAQ,CAACP,aAAa,CAACe,GAAG,CAAC,CAAC;AAC9B,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAIC,GAAG,IAAK,MAAOV,QAAQ,IAAK;EAC5D;EACA;EACG,MAAMC,MAAM,GAAG,MAAMH,eAAe,CAACY,GAAG,CAAC;EAC5C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}