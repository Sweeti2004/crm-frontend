{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isLoading: false,\n  status: \"\",\n  message: \"\",\n  showUpdatePassForm: false\n  // email: \"\",\n};\nconst passwordReset = createSlice({\n  name: \"passwordReset\",\n  initialState,\n  reducers: {\n    otpReqPending: state => {\n      state.isLoading = true;\n    },\n    otpReqSuccess: (state, {\n      payload\n    }) => {\n      state.isLoading = false;\n      state.status = \"success\";\n      state.message = payload.message;\n      state.email = payload.email;\n      state.showUpdatePassForm = true;\n    },\n    updatePassSuccess: (state, {\n      payload\n    }) => {\n      state.isLoading = false;\n      state.status = \"success\";\n      state.message = payload;\n      // state.showOtpForm = false;\n    },\n    otpReqFail: (state, {\n      payload\n    }) => {\n      state.isLoading = false;\n      state.status = \"error\";\n      state.message = payload;\n    }\n  }\n});\nconst {\n  reducer,\n  actions\n} = passwordReset;\nexport const {\n  otpReqPending,\n  otpReqSuccess,\n  otpReqFail,\n  updatePassSuccess\n} = actions;\nexport default reducer;","map":{"version":3,"names":["createSlice","initialState","isLoading","status","message","showUpdatePassForm","passwordReset","name","reducers","otpReqPending","state","otpReqSuccess","payload","email","updatePassSuccess","otpReqFail","reducer","actions"],"sources":["C:/Users/hp/OneDrive/Documents/Desktop/CRM/crm-frontend/frontend/src/components/password-reset/passwordSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n\tisLoading: false,\r\n\tstatus: \"\",\r\n\tmessage: \"\",\r\n\tshowUpdatePassForm: false,\r\n\t// email: \"\",\r\n};\r\nconst passwordReset = createSlice({\r\n\tname: \"passwordReset\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\totpReqPending: state => {\r\n\t\t\tstate.isLoading = true;\r\n\t\t},\r\n\t\totpReqSuccess: (state, { payload }) => {\r\n\t\t\tstate.isLoading = false;\r\n\t\t\tstate.status = \"success\";\r\n\t\t\tstate.message = payload.message;\r\n\t\t\tstate.email = payload.email;\r\n\t\t\tstate.showUpdatePassForm = true;\r\n\t\t},\r\n\t\tupdatePassSuccess: (state, { payload }) => {\r\n\t\t\tstate.isLoading = false;\r\n\t\t\tstate.status = \"success\";\r\n\t\t\tstate.message = payload;\r\n\t\t\t// state.showOtpForm = false;\r\n\t\t},\r\n\t\totpReqFail: (state, { payload }) => {\r\n\t\t\tstate.isLoading = false;\r\n\t\t\tstate.status = \"error\";\r\n\t\t\tstate.message = payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst { reducer, actions } = passwordReset;\r\n\r\nexport const {\r\n\totpReqPending,\r\n\totpReqSuccess,\r\n\totpReqFail,\r\n\tupdatePassSuccess,\r\n} = actions;\r\nexport default reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACpBC,SAAS,EAAE,KAAK;EAChBC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,EAAE;EACXC,kBAAkB,EAAE;EACpB;AACD,CAAC;AACD,MAAMC,aAAa,GAAGN,WAAW,CAAC;EACjCO,IAAI,EAAE,eAAe;EACrBN,YAAY;EACZO,QAAQ,EAAE;IACTC,aAAa,EAAEC,KAAK,IAAI;MACvBA,KAAK,CAACR,SAAS,GAAG,IAAI;IACvB,CAAC;IACDS,aAAa,EAAEA,CAACD,KAAK,EAAE;MAAEE;IAAQ,CAAC,KAAK;MACtCF,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACP,MAAM,GAAG,SAAS;MACxBO,KAAK,CAACN,OAAO,GAAGQ,OAAO,CAACR,OAAO;MAC/BM,KAAK,CAACG,KAAK,GAAGD,OAAO,CAACC,KAAK;MAC3BH,KAAK,CAACL,kBAAkB,GAAG,IAAI;IAChC,CAAC;IACDS,iBAAiB,EAAEA,CAACJ,KAAK,EAAE;MAAEE;IAAQ,CAAC,KAAK;MAC1CF,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACP,MAAM,GAAG,SAAS;MACxBO,KAAK,CAACN,OAAO,GAAGQ,OAAO;MACvB;IACD,CAAC;IACDG,UAAU,EAAEA,CAACL,KAAK,EAAE;MAAEE;IAAQ,CAAC,KAAK;MACnCF,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACP,MAAM,GAAG,OAAO;MACtBO,KAAK,CAACN,OAAO,GAAGQ,OAAO;IACxB;EACD;AACD,CAAC,CAAC;AAEF,MAAM;EAAEI,OAAO;EAAEC;AAAQ,CAAC,GAAGX,aAAa;AAE1C,OAAO,MAAM;EACZG,aAAa;EACbE,aAAa;EACbI,UAAU;EACVD;AACD,CAAC,GAAGG,OAAO;AACX,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}