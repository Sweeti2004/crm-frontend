{"ast":null,"code":"import { otpReqPending, otpReqSuccess, otpReqFail\n//updatePassSuccess,\n} from \"./passwordSlice\";\nimport { reqPasswordOtp, updateUserPassword } from \"../../api/passwordApi\";\nexport const sendPasswordResetOtp = email => async dispatch => {\n  try {\n    dispatch(otpReqPending());\n    const {\n      status,\n      message\n    } = await reqPasswordOtp(email);\n    if (status === \"success\") {\n      return dispatch(otpReqSuccess({\n        message,\n        email\n      }));\n    }\n    dispatch(otpReqFail(message));\n  } catch (error) {\n    dispatch(otpReqFail(error.message));\n  }\n};\n\n// export const updatePassword = frmData => async dispatch => {\n// \ttry {\n// \t\tdispatch(otpReqPending());\n\n// \t\tconst { status, message } = await updateUserPassword(frmData);\n\n// \t\tif (status === \"success\") {\n// \t\t\treturn dispatch(updatePassSuccess(message));\n// \t\t}\n\n// \t\tdispatch(otpReqFail(message));\n// \t} catch (error) {\n// \t\tdispatch(otpReqFail(error.message));\n// \t}\n// };","map":{"version":3,"names":["otpReqPending","otpReqSuccess","otpReqFail","reqPasswordOtp","updateUserPassword","sendPasswordResetOtp","email","dispatch","status","message","error"],"sources":["C:/Users/hp/OneDrive/Documents/Desktop/CRM/crm-frontend/frontend/src/components/password-reset/passwordAction.js"],"sourcesContent":["import {\r\n\totpReqPending,\r\n\totpReqSuccess,\r\n\totpReqFail,\r\n\t//updatePassSuccess,\r\n} from \"./passwordSlice\";\r\n\r\nimport { reqPasswordOtp, updateUserPassword } from \"../../api/passwordApi\";\r\n\r\nexport const sendPasswordResetOtp = email => async dispatch => {\r\n\ttry {\r\n\t\tdispatch(otpReqPending());\r\n\r\n\t\tconst { status, message } = await reqPasswordOtp(email);\r\n\r\n\t\tif (status === \"success\") {\r\n\t\t\treturn dispatch(otpReqSuccess({ message, email }));\r\n\t\t}\r\n\r\n\t\tdispatch(otpReqFail(message));\r\n\t} catch (error) {\r\n\t\tdispatch(otpReqFail(error.message));\r\n\t}\r\n};\r\n\r\n// export const updatePassword = frmData => async dispatch => {\r\n// \ttry {\r\n// \t\tdispatch(otpReqPending());\r\n\r\n// \t\tconst { status, message } = await updateUserPassword(frmData);\r\n\r\n// \t\tif (status === \"success\") {\r\n// \t\t\treturn dispatch(updatePassSuccess(message));\r\n// \t\t}\r\n\r\n// \t\tdispatch(otpReqFail(message));\r\n// \t} catch (error) {\r\n// \t\tdispatch(otpReqFail(error.message));\r\n// \t}\r\n// };"],"mappings":"AAAA,SACCA,aAAa,EACbC,aAAa,EACbC;AACA;AAAA,OACM,iBAAiB;AAExB,SAASC,cAAc,EAAEC,kBAAkB,QAAQ,uBAAuB;AAE1E,OAAO,MAAMC,oBAAoB,GAAGC,KAAK,IAAI,MAAMC,QAAQ,IAAI;EAC9D,IAAI;IACHA,QAAQ,CAACP,aAAa,CAAC,CAAC,CAAC;IAEzB,MAAM;MAAEQ,MAAM;MAAEC;IAAQ,CAAC,GAAG,MAAMN,cAAc,CAACG,KAAK,CAAC;IAEvD,IAAIE,MAAM,KAAK,SAAS,EAAE;MACzB,OAAOD,QAAQ,CAACN,aAAa,CAAC;QAAEQ,OAAO;QAAEH;MAAM,CAAC,CAAC,CAAC;IACnD;IAEAC,QAAQ,CAACL,UAAU,CAACO,OAAO,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACfH,QAAQ,CAACL,UAAU,CAACQ,KAAK,CAACD,OAAO,CAAC,CAAC;EACpC;AACD,CAAC;;AAED;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}