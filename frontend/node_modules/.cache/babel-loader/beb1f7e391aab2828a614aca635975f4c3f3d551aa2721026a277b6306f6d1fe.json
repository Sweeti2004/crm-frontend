{"ast":null,"code":"import axios from \"axios\";\nconst rootUrl = \"http://localhost:5000/v1/\";\nconst loginUrl = rootUrl + \"user/login\";\nconst userProfileUrl = rootUrl + \"user\";\nexport const userLogin = frmData => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const res = await axios.post(loginUrl, frmData);\n      resolve(res.data);\n      if (res.data.status === \"success\") {\n        sessionStorage.setItem(\"accessJWT\", res.data.accessJWT);\n        localStorage.setItem(\"crmSite\", JSON.stringify({\n          refreshJWT: res.data.refreshJWT\n        }));\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\nexport const fetchUser = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const accessJWT = sessionStorage.getItem(\"accessJWT\");\n      if (!accessJWT) {\n        reject(\"Token not found!\");\n      }\n      const res = await axios.get(userProfileUrl, {\n        headers: {\n          Authorization: \"Bearer \" + accessJWT\n        }\n      });\n      console.log(res.data);\n      resolve(res.data);\n    } catch (error) {\n      console.log(error);\n      reject(error.message);\n    }\n  });\n};","map":{"version":3,"names":["axios","rootUrl","loginUrl","userProfileUrl","userLogin","frmData","Promise","resolve","reject","res","post","data","status","sessionStorage","setItem","accessJWT","localStorage","JSON","stringify","refreshJWT","error","fetchUser","getItem","get","headers","Authorization","console","log","message"],"sources":["C:/Users/hp/OneDrive/Documents/Desktop/CRM/crm-frontend/frontend/src/api/userApi.js"],"sourcesContent":["import axios from \"axios\";\r\nconst rootUrl = \"http://localhost:5000/v1/\";\r\nconst loginUrl = rootUrl + \"user/login\";\r\nconst userProfileUrl = rootUrl + \"user\";\r\nexport const userLogin = (frmData) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const res = await axios.post(loginUrl, frmData);\r\n    \r\n      resolve(res.data);\r\n\r\n      if (res.data.status === \"success\") {\r\n        sessionStorage.setItem(\"accessJWT\", res.data.accessJWT);\r\n        localStorage.setItem(\r\n          \"crmSite\",\r\n          JSON.stringify({ refreshJWT: res.data.refreshJWT })\r\n        );\r\n      }\r\n    } catch (error) {\r\n      \r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const fetchUser = () => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      const accessJWT = sessionStorage.getItem(\"accessJWT\");\r\n\r\n      if (!accessJWT) {\r\n        reject(\"Token not found!\");\r\n      }\r\n\r\n      const res = await axios.get(userProfileUrl, {\r\n        headers: {\r\n          Authorization: \"Bearer \"+accessJWT,\r\n        },\r\n      });\r\nconsole.log(res.data)\r\n      resolve(res.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      reject(error.message);\r\n    }\r\n  });\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,2BAA2B;AAC3C,MAAMC,QAAQ,GAAGD,OAAO,GAAG,YAAY;AACvC,MAAME,cAAc,GAAGF,OAAO,GAAG,MAAM;AACvC,OAAO,MAAMG,SAAS,GAAIC,OAAO,IAAK;EACpC,OAAO,IAAIC,OAAO,CAAC,OAAOC,OAAO,EAAEC,MAAM,KAAK;IAC5C,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,IAAI,CAACR,QAAQ,EAAEG,OAAO,CAAC;MAE/CE,OAAO,CAACE,GAAG,CAACE,IAAI,CAAC;MAEjB,IAAIF,GAAG,CAACE,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;QACjCC,cAAc,CAACC,OAAO,CAAC,WAAW,EAAEL,GAAG,CAACE,IAAI,CAACI,SAAS,CAAC;QACvDC,YAAY,CAACF,OAAO,CAClB,SAAS,EACTG,IAAI,CAACC,SAAS,CAAC;UAAEC,UAAU,EAAEV,GAAG,CAACE,IAAI,CAACQ;QAAW,CAAC,CACpD,CAAC;MACH;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MAEdZ,MAAM,CAACY,KAAK,CAAC;IACf;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAC7B,OAAO,IAAIf,OAAO,CAAC,OAAOC,OAAO,EAAEC,MAAM,KAAK;IAC5C,IAAI;MACF,MAAMO,SAAS,GAAGF,cAAc,CAACS,OAAO,CAAC,WAAW,CAAC;MAErD,IAAI,CAACP,SAAS,EAAE;QACdP,MAAM,CAAC,kBAAkB,CAAC;MAC5B;MAEA,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAACuB,GAAG,CAACpB,cAAc,EAAE;QAC1CqB,OAAO,EAAE;UACPC,aAAa,EAAE,SAAS,GAACV;QAC3B;MACF,CAAC,CAAC;MACRW,OAAO,CAACC,GAAG,CAAClB,GAAG,CAACE,IAAI,CAAC;MACfJ,OAAO,CAACE,GAAG,CAACE,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdM,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;MAClBZ,MAAM,CAACY,KAAK,CAACQ,OAAO,CAAC;IACvB;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}