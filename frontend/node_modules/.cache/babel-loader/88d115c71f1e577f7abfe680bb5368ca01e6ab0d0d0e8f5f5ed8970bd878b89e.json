{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Documents\\\\Desktop\\\\CRM\\\\crm-frontend\\\\src\\\\page\\\\ticket\\\\Ticket.page.js\";\nimport React from 'react';\nimport { Container, Row, Col, Button, Spinner, Alert } from \"react-bootstrap\";\nimport PageBreadcrumb from '../../components/breadcrumb/Breadcrumb.comp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Ticket = () => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(PageBreadcrumb, {\n          page: \"Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this)\n  // \t<Row>\n  // \t\t<Col>\n  // \t\t\t{isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\n  // \t\t\t{error && <Alert variant=\"danger\">{error}</Alert>}\n  // \t\t\t{replyTicketError && (\n  // \t\t\t\t<Alert variant=\"danger\">{replyTicketError}</Alert>\n  // \t\t\t)}\n  // \t\t\t{replyMsg && <Alert variant=\"success\">{replyMsg}</Alert>}\n  // \t\t</Col>\n  // \t</Row>\n  // \t<Row>\n  // \t\t<Col className=\"text-weight-bolder text-secondary\">\n  // \t\t\t<div className=\"subject\">Subject: {selectedTicket.subject}</div>\n  // \t\t\t<div className=\"date\">\n  // \t\t\t\tTicket Opened:{\" \"}\n  // \t\t\t\t{selectedTicket.openAt &&\n  // \t\t\t\t\tnew Date(selectedTicket.openAt).toLocaleString()}\n  // \t\t\t</div>\n  // \t\t\t<div className=\"status\">Status: {selectedTicket.status}</div>\n  // \t\t</Col>\n  // \t\t<Col className=\"text-right\">\n  // \t\t\t<Button\n  // \t\t\t\tvariant=\"outline-info\"\n  // \t\t\t\tonClick={() => dispatch(closeTicket(tId))}\n  // \t\t\t\tdisabled={selectedTicket.status === \"Closed\"}\n  // \t\t\t>\n  // \t\t\t\tClose Ticket\n  // \t\t\t</Button>\n  // \t\t</Col>\n  // \t</Row>\n  // \t<Row className=\"mt-4\">\n  // \t\t<Col>\n  // \t\t\t{selectedTicket.conversations && (\n  // \t\t\t\t<MessageHistory msg={selectedTicket.conversations} />\n  // \t\t\t)}\n  // \t\t</Col>\n  // \t</Row>\n  // \t<hr />\n\n  // \t<Row className=\"mt-4\">\n  // \t\t<Col>\n  // \t\t\t<UpdateTicket _id={tId} />\n  // \t\t</Col>\n  // \t</Row>\n  // </Container>\n  ;\n};\n_c = Ticket;\nexport default Ticket;\nvar _c;\n$RefreshReg$(_c, \"Ticket\");","map":{"version":3,"names":["React","Container","Row","Col","Button","Spinner","Alert","PageBreadcrumb","jsxDEV","_jsxDEV","Ticket","children","page","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Documents/Desktop/CRM/crm-frontend/src/page/ticket/Ticket.page.js"],"sourcesContent":["import React from 'react'\r\nimport { Container, Row, Col, Button, Spinner, Alert } from \"react-bootstrap\";\r\nimport PageBreadcrumb from '../../components/breadcrumb/Breadcrumb.comp'\r\nconst Ticket = () => {\r\n  return (\r\n    <Container>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<PageBreadcrumb page=\"Ticket\" />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n</Container>\r\n\t\t// \t<Row>\r\n\t\t// \t\t<Col>\r\n\t\t// \t\t\t{isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\r\n\t\t// \t\t\t{error && <Alert variant=\"danger\">{error}</Alert>}\r\n\t\t// \t\t\t{replyTicketError && (\r\n\t\t// \t\t\t\t<Alert variant=\"danger\">{replyTicketError}</Alert>\r\n\t\t// \t\t\t)}\r\n\t\t// \t\t\t{replyMsg && <Alert variant=\"success\">{replyMsg}</Alert>}\r\n\t\t// \t\t</Col>\r\n\t\t// \t</Row>\r\n\t\t// \t<Row>\r\n\t\t// \t\t<Col className=\"text-weight-bolder text-secondary\">\r\n\t\t// \t\t\t<div className=\"subject\">Subject: {selectedTicket.subject}</div>\r\n\t\t// \t\t\t<div className=\"date\">\r\n\t\t// \t\t\t\tTicket Opened:{\" \"}\r\n\t\t// \t\t\t\t{selectedTicket.openAt &&\r\n\t\t// \t\t\t\t\tnew Date(selectedTicket.openAt).toLocaleString()}\r\n\t\t// \t\t\t</div>\r\n\t\t// \t\t\t<div className=\"status\">Status: {selectedTicket.status}</div>\r\n\t\t// \t\t</Col>\r\n\t\t// \t\t<Col className=\"text-right\">\r\n\t\t// \t\t\t<Button\r\n\t\t// \t\t\t\tvariant=\"outline-info\"\r\n\t\t// \t\t\t\tonClick={() => dispatch(closeTicket(tId))}\r\n\t\t// \t\t\t\tdisabled={selectedTicket.status === \"Closed\"}\r\n\t\t// \t\t\t>\r\n\t\t// \t\t\t\tClose Ticket\r\n\t\t// \t\t\t</Button>\r\n\t\t// \t\t</Col>\r\n\t\t// \t</Row>\r\n\t\t// \t<Row className=\"mt-4\">\r\n\t\t// \t\t<Col>\r\n\t\t// \t\t\t{selectedTicket.conversations && (\r\n\t\t// \t\t\t\t<MessageHistory msg={selectedTicket.conversations} />\r\n\t\t// \t\t\t)}\r\n\t\t// \t\t</Col>\r\n\t\t// \t</Row>\r\n\t\t// \t<hr />\r\n\r\n\t\t// \t<Row className=\"mt-4\">\r\n\t\t// \t\t<Col>\r\n\t\t// \t\t\t<UpdateTicket _id={tId} />\r\n\t\t// \t\t</Col>\r\n\t\t// \t</Row>\r\n\t\t// </Container>\r\n  )\r\n}\r\n\r\nexport default Ticket\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,QAAQ,iBAAiB;AAC7E,OAAOC,cAAc,MAAM,6CAA6C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACxE,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB,oBACED,OAAA,CAACR,SAAS;IAAAU,QAAA,eACXF,OAAA,CAACP,GAAG;MAAAS,QAAA,eACHF,OAAA,CAACN,GAAG;QAAAQ,QAAA,eACHF,OAAA,CAACF,cAAc;UAACK,IAAI,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE;EACT;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEF,CAAC;AAAAC,EAAA,GAvDKP,MAAM;AAyDZ,eAAeA,MAAM;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}