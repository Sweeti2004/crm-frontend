{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Documents\\\\Desktop\\\\CRM\\\\crm-frontend\\\\frontend\\\\src\\\\page\\\\password-reset\\\\PasswordOtpForm.page.js\";\nimport React from \"react\";\n// import { useSelector } from \"react-redux\";\n\n// import { Jumbotron } from \"react-bootstrap\";\n// import { ResetPassword } from \"../../components/password-reset/PasswordReset.comp\";\n// import UpdatePasswordForm from \"../../components/password-reset/UpdatePasswordForm.comp\";\n\n// import \"./passwordOtpForm.style.css\";\n\n//Workflow\n\n// [x] Create password reset page\n// [] Add request OTP form\n// [] Add redux store with Redux-toolkit to handle the network status\n// [] sent OTP to email from API (API Already created)\n// [] Load form to input OTP and new password\n// [] New password must match confirm password, form validation\n// [] Connect to API Endpoint (API Already created)\n// [] Add reducer through Redux-toolkit to handle the network status and provide the feedback to the user\n// [] Send email, OTP and new password to update the password.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PasswordOtpForm = () => {\n  //const { showUpdatePassForm } = useSelector(state => state.password);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"entry-page bg-info\",\n    children: \"Password reset page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n_c = PasswordOtpForm;\nvar _c;\n$RefreshReg$(_c, \"PasswordOtpForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PasswordOtpForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Documents/Desktop/CRM/crm-frontend/frontend/src/page/password-reset/PasswordOtpForm.page.js"],"sourcesContent":["import React from \"react\";\r\n// import { useSelector } from \"react-redux\";\r\n\r\n// import { Jumbotron } from \"react-bootstrap\";\r\n// import { ResetPassword } from \"../../components/password-reset/PasswordReset.comp\";\r\n// import UpdatePasswordForm from \"../../components/password-reset/UpdatePasswordForm.comp\";\r\n\r\n// import \"./passwordOtpForm.style.css\";\r\n\r\n//Workflow\r\n\r\n// [x] Create password reset page\r\n// [] Add request OTP form\r\n// [] Add redux store with Redux-toolkit to handle the network status\r\n// [] sent OTP to email from API (API Already created)\r\n// [] Load form to input OTP and new password\r\n// [] New password must match confirm password, form validation\r\n// [] Connect to API Endpoint (API Already created)\r\n// [] Add reducer through Redux-toolkit to handle the network status and provide the feedback to the user\r\n// [] Send email, OTP and new password to update the password.\r\n\r\nexport const PasswordOtpForm = () => {\r\n\t//const { showUpdatePassForm } = useSelector(state => state.password);\r\n\r\n\treturn (\r\n\t\t<div className=\"entry-page bg-info\">\r\n\t\t\t{/* <Jumbotron className=\"form-box\">\r\n\t\t\t\t{showUpdatePassForm ? <UpdatePasswordForm /> : <ResetPassword />}\r\n\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t<a href=\"/\">Login Now</a>\r\n\t\t\t\t</div>\r\n\t\t\t</Jumbotron> */}\r\n            Password reset page\r\n\t\t</div>\r\n\t);\r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACpC;;EAEA,oBACCD,OAAA;IAAKE,SAAS,EAAC,oBAAoB;IAAAC,QAAA,EAMlB;EAEjB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAER,CAAC;AAACC,EAAA,GAdWP,eAAe;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}