{"ast":null,"code":"import React,{useEffect}from'react';import{Navigate}from'react-router-dom';import{useSelector,useDispatch}from'react-redux';import{loginSuccess}from'../login/loginSlice';import{fetchNewAccessJWT}from'../../api/userApi';import{getUserProfile}from\"../../page/dashboard/userAction\";// Replace with real auth logic\nimport{jsx as _jsx}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{children,...rest}=_ref;const dispatch=useDispatch();const{isAuth}=useSelector(state=>state.login);const{user}=useSelector(state=>state.user);useEffect(()=>{const updateAccessJWT=async()=>{const result=await fetchNewAccessJWT();result&&dispatch(loginSuccess());};!user._id&&dispatch(getUserProfile());!sessionStorage.getItem('accessJWT')&&localStorage.getItem('crmSite')&&updateAccessJWT();!isAuth&&sessionStorage.getItem(\"accessJWT\")&&dispatch(loginSuccess());},[dispatch,isAuth,user._id]);return isAuth?children:/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});};export default PrivateRoute;","map":{"version":3,"names":["React","useEffect","Navigate","useSelector","useDispatch","loginSuccess","fetchNewAccessJWT","getUserProfile","jsx","_jsx","PrivateRoute","_ref","children","rest","dispatch","isAuth","state","login","user","updateAccessJWT","result","_id","sessionStorage","getItem","localStorage","to","replace"],"sources":["C:/Users/hp/OneDrive/Documents/Desktop/CRM/crm-frontend/frontend/src/components/private-route/PrivateRoute.comp.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { loginSuccess } from '../login/loginSlice';\r\nimport { fetchNewAccessJWT } from '../../api/userApi';\r\nimport { getUserProfile } from \"../../page/dashboard/userAction\"\r\n// Replace with real auth logic\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n  const dispatch = useDispatch()\r\n  const { isAuth } = useSelector(state => state.login)\r\n  const { user } = useSelector(state => state.user)\r\n\r\n  useEffect(() => {\r\n    const updateAccessJWT = async () => {\r\n      const result = await fetchNewAccessJWT();\r\n      result && dispatch(loginSuccess());\r\n    };\r\n    !user._id && dispatch(getUserProfile())\r\n    !sessionStorage.getItem('accessJWT') && localStorage.getItem('crmSite') && updateAccessJWT();\r\n    !isAuth && sessionStorage.getItem(\"accessJWT\") && dispatch(loginSuccess())\r\n  }, [dispatch, isAuth,user._id])\r\n  return isAuth ? children : <Navigate to=\"/\" replace />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,YAAY,KAAQ,qBAAqB,CAClD,OAASC,iBAAiB,KAAQ,mBAAmB,CACrD,OAASC,cAAc,KAAQ,iCAAiC,CAChE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEA,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAA2B,IAA1B,CAAEC,QAAQ,CAAE,GAAGC,IAAK,CAAC,CAAAF,IAAA,CACzC,KAAM,CAAAG,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAEW,MAAO,CAAC,CAAGZ,WAAW,CAACa,KAAK,EAAIA,KAAK,CAACC,KAAK,CAAC,CACpD,KAAM,CAAEC,IAAK,CAAC,CAAGf,WAAW,CAACa,KAAK,EAAIA,KAAK,CAACE,IAAI,CAAC,CAEjDjB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAkB,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAd,iBAAiB,CAAC,CAAC,CACxCc,MAAM,EAAIN,QAAQ,CAACT,YAAY,CAAC,CAAC,CAAC,CACpC,CAAC,CACD,CAACa,IAAI,CAACG,GAAG,EAAIP,QAAQ,CAACP,cAAc,CAAC,CAAC,CAAC,CACvC,CAACe,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC,EAAIC,YAAY,CAACD,OAAO,CAAC,SAAS,CAAC,EAAIJ,eAAe,CAAC,CAAC,CAC5F,CAACJ,MAAM,EAAIO,cAAc,CAACC,OAAO,CAAC,WAAW,CAAC,EAAIT,QAAQ,CAACT,YAAY,CAAC,CAAC,CAAC,CAC5E,CAAC,CAAE,CAACS,QAAQ,CAAEC,MAAM,CAACG,IAAI,CAACG,GAAG,CAAC,CAAC,CAC/B,MAAO,CAAAN,MAAM,CAAGH,QAAQ,cAAGH,IAAA,CAACP,QAAQ,EAACuB,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAC,CACxD,CAAC,CAED,cAAe,CAAAhB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}